{"version":3,"sources":["assets/Bars.svg","theme/index.js","context/AppContext.jsx","components/List.jsx","components/PopOver.jsx","components/AddCustomerModal.jsx","components/WholePage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","theme","colors","white","iconBlue","sandBG","nordBlue","graBlue1","graBlue2","fontGray","tableHead","tabledorder","fonts","main","fontSize","AppContext","createContext","AppContextProvider","props","useState","date","name","input","setInput","isEdit","setIsEdit","isModalOpen","setIsModalOpen","modalTitle","setModalTitle","customerList","setCustomerList","updateById","setUpdateById","isProducing","setIsProducing","showPopOver","setShowPopOver","isWaiting","setIsWaiting","closeModal","addCustomer","data","id","uuid","v4","updateCustomer","newCustomerList","map","list","value","validateCustomerInfo","validatorCondition","test","length","alert","removeCustomer","newList","filter","d","editCustomer","customer","find","startProducing","setTimeout","Provider","HoverColor","styled","Box","TableTitle","TableTitleNotActive","List","useContext","display","onClick","width","height","justifyContent","alignItems","paddingX","color","className","StyledPopOver","RoundBorder","MessageArrow","PopOver","flexDirection","bgcolor","marginX","marginLeft","StyledModal","Modal","StyledModalTitle","Button","AddCustomerModal","isOpen","paddingLeft","marginRight","type","size","placeholder","onChange","e","target","marginBottom","LogoN","Icon","ArrowDown","GradientH","GradientV","div","SandHeader","SandFooter","Content","InactiveStart","BoxHover","WholePage","window","location","reload","src","bars","alt","marginTop","key","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9211e7d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bars.78fd75e0.svg\";","// colors\r\nconst white = '#FFFFFF';\r\nconst iconBlue = '#96B5D0';\r\nconst sandBG = '#F4F4F4';\r\nconst nordBlue = '#576D85';\r\nconst graBlue1 = '#6892C1';\r\nconst graBlue2 = '#96BEE';\r\nconst fontGray = '#525252';\r\nconst tableHead = '#EFF2F6';\r\nconst tabledorder = '#979797';\r\n\r\nconst theme = {\r\n  colors: {\r\n    white,\r\n    iconBlue,\r\n    sandBG,\r\n    nordBlue,\r\n    graBlue1,\r\n    graBlue2,\r\n    fontGray,\r\n    tableHead,\r\n    tabledorder,\r\n  },\r\n  fonts: {\r\n    main: 'Calibri',\r\n  },\r\n  fontSize: ['17px', '22px', '36px'],\r\n};\r\n\r\nexport default theme;\r\n","import React, { useState, createContext } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppContextProvider = props => {\r\n  const [input, setInput] = useState({ date: '', name: '' });\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('Opprett ny kunde');\r\n  const [customerList, setCustomerList] = useState([]);\r\n  const [updateById, setUpdateById] = useState('');\r\n  const [isProducing, setIsProducing] = useState(false);\r\n  const [showPopOver, setShowPopOver] = useState(false);\r\n  const [isWaiting, setIsWaiting] = useState(false);\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setInput({ date: '', name: '' });\r\n    setModalTitle('Opprett ny kunde');\r\n    setUpdateById('');\r\n  };\r\n\r\n  const addCustomer = data => {\r\n    data.id = uuid.v4();\r\n    setCustomerList([...customerList, data]);\r\n    closeModal();\r\n  };\r\n\r\n  const updateCustomer = data => {\r\n    const newCustomerList = customerList.map(list => {\r\n      if (list.id === updateById)\r\n        return { ...list, date: data.date, name: data.name };\r\n      return list;\r\n    });\r\n    setCustomerList(newCustomerList);\r\n    closeModal();\r\n  };\r\n\r\n  const validateCustomerInfo = data => {\r\n    const validatorCondition =\r\n      /^([0]?[1-9]|[1|2][0-9]|[3][0|1])\\.([0]?[1-9]|[1][0-2])\\.(([0-9]{2}))$/.test(\r\n        data.date\r\n      ) && data.name.length > 0;\r\n    if (validatorCondition && updateById.length === 0) {\r\n      addCustomer(data);\r\n    } else if (validatorCondition && updateById.length > 5) {\r\n      updateCustomer(data);\r\n    } else\r\n      alert(\r\n        `Date must follow the format DD.MM.YY\\nDate must be valid\\ncustomer name can't be empty`\r\n      );\r\n  };\r\n\r\n  const removeCustomer = id => {\r\n    const newList = customerList.filter(d => d.id !== id);\r\n    setCustomerList(newList);\r\n  };\r\n\r\n  const editCustomer = id => {\r\n    const customer = customerList.find(d => d.id === id);\r\n    setModalTitle(`Edit  ${customer.name}`);\r\n    setIsModalOpen(true);\r\n    setInput({ date: customer.date, name: customer.name });\r\n    setUpdateById(id);\r\n  };\r\n\r\n  const startProducing = () => {\r\n    setIsProducing(true);\r\n    setIsWaiting(true);\r\n    setTimeout(() => {\r\n      setShowPopOver(true);\r\n      setIsWaiting(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const value = {\r\n    input,\r\n    setInput,\r\n    isEdit,\r\n    setIsEdit,\r\n    isModalOpen,\r\n    setIsModalOpen,\r\n    modalTitle,\r\n    setModalTitle,\r\n    customerList,\r\n    setCustomerList,\r\n    validateCustomerInfo,\r\n    addCustomer,\r\n    removeCustomer,\r\n    editCustomer,\r\n    updateCustomer,\r\n    closeModal,\r\n    isProducing,\r\n    setIsProducing,\r\n    startProducing,\r\n    showPopOver,\r\n    setShowPopOver,\r\n    isWaiting,\r\n  };\r\n\r\n  return <AppContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst List = ({ id, date, name }) => {\r\n  const { isEdit, removeCustomer, editCustomer } = useContext(AppContext);\r\n\r\n  return (\r\n    <Box display='flex'>\r\n      {isEdit ? (\r\n        <HoverColor display='flex'>\r\n          <Box display='flex' onClick={() => editCustomer(id)}>\r\n            <TableTitle\r\n              width='10vw'\r\n              height='50px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n            >\r\n              {date}\r\n            </TableTitle>\r\n            <TableTitle\r\n              paddingX='15px'\r\n              width='30vw'\r\n              height='50px'\r\n              display='flex'\r\n              justifyContent='space-between'\r\n              alignItems='center'\r\n            >\r\n              {name}\r\n            </TableTitle>\r\n          </Box>\r\n          <TableTitle\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            color='red'\r\n            onClick={() => removeCustomer(id)}\r\n          >\r\n            <i className='fas fa-trash-alt' />\r\n          </TableTitle>\r\n        </HoverColor>\r\n      ) : (\r\n        <>\r\n          <TableTitleNotActive\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            {date}\r\n          </TableTitleNotActive>\r\n          <TableTitleNotActive\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            {name}\r\n          </TableTitleNotActive>\r\n          <TableTitleNotActive\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <i className='fas fa-trash-alt' />\r\n          </TableTitleNotActive>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nconst HoverColor = styled(Box)`\r\n  &:hover {\r\n    div {\r\n      background: ${props => props.theme.colors.iconBlue};\r\n    }\r\n  }\r\n`;\r\n\r\nconst TableTitle = styled(Box)`\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TableTitleNotActive = styled(Box)`\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n`;\r\n\r\nexport default List;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst PopOver = () => {\r\n  const {\r\n    setIsProducing,\r\n    customerList,\r\n    setShowPopOver,\r\n    setIsEdit,\r\n  } = useContext(AppContext);\r\n  return (\r\n    <StyledPopOver\r\n      display='flex'\r\n      flexDirection='column'\r\n      bgcolor='white'\r\n      onClick={() => {\r\n        setShowPopOver(false);\r\n        setIsProducing(false);\r\n        setIsEdit(false);\r\n      }}\r\n    >\r\n      <MessageArrow />\r\n      <RoundBorder\r\n        height='30px'\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n      >\r\n        Bekreftelse\r\n      </RoundBorder>\r\n      <Box height='30px' display='flex' alignItems='center'>\r\n        <Box fontSize='8px' color='#03fc0f' marginX='7px'>\r\n          <i className='fas fa-circle' />\r\n        </Box>\r\n        <Box color='black'>Produsert</Box>\r\n        <Box marginLeft='30px'>{customerList.length}</Box>\r\n      </Box>\r\n    </StyledPopOver>\r\n  );\r\n};\r\n\r\nconst StyledPopOver = styled(Box)`\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 50px;\r\n  right: 75px;\r\n  width: 150px;\r\n  height: 60px;\r\n  box-shadow: 0 2px 7px 2px rgba(169, 169, 169, 0.5);\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst RoundBorder = styled(Box)`\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n  background: ${props => props.theme.colors.nordBlue};\r\n  color: ${props => props.theme.colors.white};\r\n`;\r\n\r\nconst MessageArrow = styled(Box)`\r\n  position: fixed;\r\n  z-index: 1;\r\n  top: 40px;\r\n  right: 138px;\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 12px solid transparent;\r\n  border-right: 12px solid transparent;\r\n  border-bottom: 12px solid ${props => props.theme.colors.nordBlue};\r\n`;\r\n\r\nexport default PopOver;\r\n","import React, { useContext } from 'react';\r\nimport Modal from 'styled-react-modal';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst AddCustomerModal = () => {\r\n  const {\r\n    input,\r\n    setInput,\r\n    isModalOpen,\r\n    modalTitle,\r\n    closeModal,\r\n    validateCustomerInfo,\r\n  } = useContext(AppContext);\r\n  return (\r\n    <StyledModal isOpen={isModalOpen}>\r\n      <StyledModalTitle paddingLeft='10px'>{modalTitle}</StyledModalTitle>\r\n      <Box display='flex' justifyContent='space-between' marginX='20px'>\r\n        <Box display='flex'>\r\n          <Box marginRight='10px'>\r\n            <span>Dato</span>\r\n          </Box>\r\n          <input\r\n            type='text'\r\n            size='10'\r\n            placeholder='DD.MM.YY'\r\n            value={input.date}\r\n            onChange={e => setInput({ ...input, date: e.target.value })}\r\n          />\r\n        </Box>\r\n        <Box display='flex'>\r\n          <Box marginRight='10px'>\r\n            <span>Kunde</span>\r\n          </Box>\r\n          <input\r\n            type='text'\r\n            size='40'\r\n            placeholder='Kundenavn'\r\n            value={input.name}\r\n            onChange={e => setInput({ ...input, name: e.target.value })}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box display='flex' justifyContent='flex-end' marginBottom='10px'>\r\n        <Button\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          marginRight='10px'\r\n          onClick={() => validateCustomerInfo(input)}\r\n        >\r\n          Lagre\r\n        </Button>\r\n\r\n        <Button\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          marginRight='10px'\r\n          onClick={() => closeModal()}\r\n        >\r\n          Avbryt\r\n        </Button>\r\n      </Box>\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\nconst StyledModal = Modal.styled`\r\nwidth: 600px;\r\nheight: 150px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nborder: 2px solid ${props => props.theme.colors.nordBlue};\r\nbackground-color: ${props => props.theme.colors.white};\r\n`;\r\n\r\nconst StyledModalTitle = styled(Box)`\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  font-size: ${props => props.theme.fontSize[1]};\r\n`;\r\n\r\nconst Button = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default AddCustomerModal;\r\n","import React, { useContext } from 'react';\r\nimport { ModalProvider } from 'styled-react-modal';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\nimport bars from '../assets/Bars.svg';\r\nimport List from './List';\r\nimport PopOver from './PopOver';\r\nimport AddCustomerModal from './AddCustomerModal';\r\n\r\nconst WholePage = () => {\r\n  const {\r\n    isEdit,\r\n    setIsEdit,\r\n    setIsModalOpen,\r\n    customerList,\r\n    isProducing,\r\n    startProducing,\r\n    showPopOver,\r\n    isWaiting,\r\n  } = useContext(AppContext);\r\n\r\n  return (\r\n    <ModalProvider>\r\n      <Box display='flex' justifyContent='space-between'>\r\n        <LogoN\r\n          height='45px'\r\n          width='45px'\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          onClick={() => window.location.reload()}\r\n        >\r\n          N\r\n        </LogoN>\r\n        <Box\r\n          height='45px'\r\n          width='45px'\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          marginRight='70px'\r\n        >\r\n          {isWaiting ? (\r\n            <Box\r\n              width='22px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n            >\r\n              <img src={bars} alt='waiting' />\r\n            </Box>\r\n          ) : (\r\n            <Icon>\r\n              <i className='fas fa-check-circle' />\r\n            </Icon>\r\n          )}\r\n\r\n          <Box marginLeft='20px' color='white'>\r\n            innstillinger\r\n          </Box>\r\n          <ArrowDown marginLeft='5px' />\r\n        </Box>\r\n      </Box>\r\n      {showPopOver && <PopOver />}\r\n      <GradientH height='50px' />\r\n      <SandHeader />\r\n      <Content>\r\n        <Box marginLeft='15px' display='flex'>\r\n          {isProducing ? (\r\n            <InactiveStart\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              marginRight='10px'\r\n            >\r\n              Start\r\n            </InactiveStart>\r\n          ) : (\r\n            <Button\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              marginRight='10px'\r\n              onClick={() => startProducing()}\r\n            >\r\n              Start\r\n            </Button>\r\n          )}\r\n          <Button\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            marginRight='10px'\r\n            onClick={() => setIsEdit(!isEdit)}\r\n          >\r\n            {isEdit ? 'Save' : 'Edit'}\r\n          </Button>\r\n          {isEdit && (\r\n            <Button\r\n              width='150px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              Opprett ny kunde\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        <Box marginTop='30px' display='flex'>\r\n          <TableTitle\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Date\r\n          </TableTitle>\r\n          <TableTitle\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box> Type something 1</Box>\r\n            <BoxHover>\r\n              <i className='fas fa-sort' />\r\n            </BoxHover>\r\n          </TableTitle>\r\n\r\n          <TableTitle\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Delete\r\n          </TableTitle>\r\n        </Box>\r\n\r\n        {customerList.map(d => (\r\n          <List key={d.id} id={d.id} date={d.date} name={d.name} />\r\n        ))}\r\n      </Content>\r\n      <GradientV />\r\n      <AddCustomerModal />\r\n      <SandFooter />\r\n    </ModalProvider>\r\n  );\r\n};\r\n\r\nconst LogoN = styled(Box)`\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.nordBlue};\r\n  font-size: ${props => props.theme.fontSize[2]};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Icon = styled(Box)`\r\n  font-size: ${props => props.theme.fontSize[1]};\r\n  color: ${props => props.theme.colors.nordBlue};\r\n`;\r\n\r\nconst ArrowDown = styled(Box)`\r\n  width: 0;\r\n  height: 0;\r\n  border-left: 5px solid transparent;\r\n  border-right: 5px solid transparent;\r\n  border-top: 5px solid ${props => props.theme.colors.white};\r\n`;\r\n\r\nconst GradientH = styled(Box)`\r\n  height: 45px;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background-image: linear-gradient(-90deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst GradientV = styled.div`\r\n  height: 100%;\r\n  width: 45px;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: linear-gradient(-45deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst SandHeader = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 60px;\r\n  top: 45px;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst SandFooter = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 160px;\r\n  left: 120px;\r\n  width: calc(100% - 200px);\r\n  height: calc(100% - 320px);\r\n`;\r\n\r\nconst Button = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InactiveStart = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  opacity: 0.48;\r\n`;\r\n\r\nconst TableTitle = styled(Box)`\r\n  background: ${props => props.theme.colors.tableHead};\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n`;\r\n\r\nconst BoxHover = styled(Box)`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default WholePage;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\nimport WholePage from './components/WholePage';\nimport AppContextProvider from './context/AppContext';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppContextProvider>\n        <WholePage />\n      </AppContextProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}