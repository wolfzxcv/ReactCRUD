{"version":3,"sources":["theme/index.js","components/List.jsx","components/WholePage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["theme","colors","white","iconBlue","sandBG","nordBlue","graBlue1","graBlue2","fontGray","tableHead","tabledorder","fonts","main","fontSize","TableTitle","styled","Box","props","List","display","width","height","justifyContent","alignItems","paddingX","className","LogoN","GradientH","GradientV","div","SandHeader","SandFooter","Content","Button","BoxHover","WholePage","onClick","window","location","reload","marginLeft","marginRight","marginTop","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23eaf966.chunk.js","sourcesContent":["// colors\r\nconst white = '#FFFFFF';\r\nconst iconBlue = '#96B5D0';\r\nconst sandBG = '#F4F4F4';\r\nconst nordBlue = '#576D85';\r\nconst graBlue1 = '#6892C1';\r\nconst graBlue2 = '#96BEE';\r\nconst fontGray = '#525252';\r\nconst tableHead = '#EFF2F6';\r\nconst tabledorder = '#979797';\r\n\r\nconst theme = {\r\n  colors: {\r\n    white,\r\n    iconBlue,\r\n    sandBG,\r\n    nordBlue,\r\n    graBlue1,\r\n    graBlue2,\r\n    fontGray,\r\n    tableHead,\r\n    tabledorder,\r\n  },\r\n  fonts: {\r\n    main: 'Calibri',\r\n  },\r\n  fontSize: ['17px', '22px', '36px'],\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst List = () => {\r\n  return (\r\n    <Box display='flex'>\r\n      <TableTitle\r\n        width='10vw'\r\n        height='50px'\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n      >\r\n        07.10.19\r\n      </TableTitle>\r\n      <TableTitle\r\n        paddingX='15px'\r\n        width='30vw'\r\n        height='50px'\r\n        display='flex'\r\n        justifyContent='space-between'\r\n        alignItems='center'\r\n      >\r\n        Example 1\r\n      </TableTitle>\r\n\r\n      <TableTitle\r\n        width='5vw'\r\n        height='50px'\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n      >\r\n        <i className='fas fa-trash-alt' />\r\n      </TableTitle>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst TableTitle = styled(Box)`\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from './List';\r\n\r\nconst WholePage = () => {\r\n  return (\r\n    <>\r\n      <LogoN\r\n        height='45px'\r\n        width='45px'\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n        onClick={() => window.location.reload()}\r\n      >\r\n        N\r\n      </LogoN>\r\n      <GradientH height='50px' />\r\n      <SandHeader />\r\n      <Content>\r\n        <Box marginLeft='15px' display='flex'>\r\n          <Button\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            marginRight='10px'\r\n          >\r\n            Start\r\n          </Button>\r\n          <Button display='flex' justifyContent='center' alignItems='center'>\r\n            Edit\r\n          </Button>\r\n        </Box>\r\n        <Box marginTop='30px' display='flex'>\r\n          <TableTitle\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Date\r\n          </TableTitle>\r\n          <TableTitle\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box> Type something 1</Box>\r\n            <BoxHover>\r\n              <i className='fas fa-sort' />\r\n            </BoxHover>\r\n          </TableTitle>\r\n\r\n          <TableTitle\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Delete\r\n          </TableTitle>\r\n        </Box>\r\n        <List />\r\n      </Content>\r\n      <GradientV />\r\n      <SandFooter />\r\n    </>\r\n  );\r\n};\r\n\r\nconst LogoN = styled(Box)`\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.nordBlue};\r\n  font-size: ${props => props.theme.fontSize[2]};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientH = styled(Box)`\r\n  height: 45px;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background-image: linear-gradient(-90deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst GradientV = styled.div`\r\n  height: 100%;\r\n  width: 45px;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: linear-gradient(-45deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst SandHeader = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 60px;\r\n  top: 45px;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst SandFooter = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 160px;\r\n  left: 120px;\r\n  width: calc(100% - 200px);\r\n  height: calc(100% - 320px);\r\n  border: 1px solid red;\r\n`;\r\n\r\nconst Button = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TableTitle = styled(Box)`\r\n  background: ${props => props.theme.colors.tableHead};\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n`;\r\n\r\nconst BoxHover = styled(Box)`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default WholePage;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\nimport WholePage from './components/WholePage';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <WholePage />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}