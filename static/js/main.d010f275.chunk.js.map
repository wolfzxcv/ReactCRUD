{"version":3,"sources":["theme/index.js","context/AppContext.jsx","components/List.jsx","components/AddCustomerModal.jsx","components/WholePage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["theme","colors","white","iconBlue","sandBG","nordBlue","graBlue1","graBlue2","fontGray","tableHead","tabledorder","fonts","main","fontSize","AppContext","createContext","AppContextProvider","props","useState","date","name","input","setInput","isEdit","setIsEdit","isModalOpen","setIsModalOpen","customerList","setCustomerList","value","addCustomer","data","id","uuid","v4","console","log","removeCustomer","newList","filter","d","Provider","TableTitle","styled","Box","TableTitleNotActive","List","useContext","display","width","height","justifyContent","alignItems","paddingX","color","onClick","className","StyledModal","Modal","StyledModalTitle","Button","AddCustomerModal","isOpen","paddingLeft","marginX","marginRight","type","size","placeholder","onChange","e","target","marginBottom","LogoN","GradientH","GradientV","div","SandHeader","SandFooter","Content","BoxHover","WholePage","window","location","reload","marginLeft","marginTop","map","key","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d010f275.chunk.js","sourcesContent":["// colors\r\nconst white = '#FFFFFF';\r\nconst iconBlue = '#96B5D0';\r\nconst sandBG = '#F4F4F4';\r\nconst nordBlue = '#576D85';\r\nconst graBlue1 = '#6892C1';\r\nconst graBlue2 = '#96BEE';\r\nconst fontGray = '#525252';\r\nconst tableHead = '#EFF2F6';\r\nconst tabledorder = '#979797';\r\n\r\nconst theme = {\r\n  colors: {\r\n    white,\r\n    iconBlue,\r\n    sandBG,\r\n    nordBlue,\r\n    graBlue1,\r\n    graBlue2,\r\n    fontGray,\r\n    tableHead,\r\n    tabledorder,\r\n  },\r\n  fonts: {\r\n    main: 'Calibri',\r\n  },\r\n  fontSize: ['17px', '22px', '36px'],\r\n};\r\n\r\nexport default theme;\r\n","import React, { useState, createContext } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst AppContextProvider = props => {\r\n  const [input, setInput] = useState({ date: '', name: '' });\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const addCustomer = data => {\r\n    data.id = uuid.v4();\r\n    setCustomerList([...customerList, data]);\r\n    setIsModalOpen(false);\r\n    setInput({ date: '', name: '' });\r\n    console.log('After adding CustomerList', [...customerList, data]);\r\n  };\r\n\r\n  const removeCustomer = id => {\r\n    console.log(id);\r\n    const newList = customerList.filter(d => d.id !== id);\r\n    setCustomerList(newList);\r\n    console.log('After removing CustomerList', newList);\r\n  };\r\n\r\n  const value = {\r\n    input,\r\n    setInput,\r\n    isEdit,\r\n    setIsEdit,\r\n    isModalOpen,\r\n    setIsModalOpen,\r\n    customerList,\r\n    setCustomerList,\r\n    addCustomer,\r\n    removeCustomer,\r\n  };\r\n\r\n  return <AppContext.Provider value={value} {...props} />;\r\n};\r\n\r\nexport default AppContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst List = ({ id, date, name }) => {\r\n  const { isEdit, removeCustomer } = useContext(AppContext);\r\n\r\n  return (\r\n    <Box display='flex'>\r\n      {isEdit ? (\r\n        <>\r\n          <TableTitle\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            {date}\r\n          </TableTitle>\r\n\r\n          <TableTitle\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            {name}\r\n          </TableTitle>\r\n          <TableTitle\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            color='red'\r\n            onClick={() => removeCustomer(id)}\r\n          >\r\n            <i className='fas fa-trash-alt' />\r\n          </TableTitle>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <TableTitleNotActive\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            {date}\r\n          </TableTitleNotActive>\r\n          <TableTitleNotActive\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            {name}\r\n          </TableTitleNotActive>\r\n          <TableTitleNotActive\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <i className='fas fa-trash-alt' />\r\n          </TableTitleNotActive>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nconst TableTitle = styled(Box)`\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TableTitleNotActive = styled(Box)`\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n`;\r\n\r\nexport default List;\r\n","import React, { useContext } from 'react';\r\nimport Modal from 'styled-react-modal';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\n\r\nconst AddCustomerModal = () => {\r\n  const {\r\n    input,\r\n    setInput,\r\n    isModalOpen,\r\n    setIsModalOpen,\r\n    addCustomer,\r\n  } = useContext(AppContext);\r\n  return (\r\n    <StyledModal isOpen={isModalOpen}>\r\n      <StyledModalTitle paddingLeft='10px'>Opprett ny kunde</StyledModalTitle>\r\n      <Box display='flex' justifyContent='space-between' marginX='20px'>\r\n        <Box display='flex'>\r\n          <Box marginRight='10px'>\r\n            <span>Dato</span>\r\n          </Box>\r\n          <input\r\n            type='text'\r\n            size='10'\r\n            placeholder='DD.MM.YY'\r\n            value={input.date}\r\n            onChange={e => setInput({ ...input, date: e.target.value })}\r\n          />\r\n        </Box>\r\n        <Box display='flex'>\r\n          <Box marginRight='10px'>\r\n            <span>Kunde</span>\r\n          </Box>\r\n          <input\r\n            type='text'\r\n            size='40'\r\n            placeholder='Kundenavn'\r\n            value={input.name}\r\n            onChange={e => setInput({ ...input, name: e.target.value })}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box display='flex' justifyContent='flex-end' marginBottom='10px'>\r\n        <Button\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          marginRight='10px'\r\n          onClick={() => addCustomer(input)}\r\n        >\r\n          OK\r\n        </Button>\r\n        <Button\r\n          display='flex'\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          marginRight='10px'\r\n          onClick={() => setIsModalOpen(false)}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Box>\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\nconst StyledModal = Modal.styled`\r\nwidth: 600px;\r\nheight: 150px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nborder: 2px solid ${props => props.theme.colors.nordBlue};\r\nbackground-color: ${props => props.theme.colors.white};\r\n`;\r\n\r\nconst StyledModalTitle = styled(Box)`\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  font-size: ${props => props.theme.fontSize[1]};\r\n`;\r\n\r\nconst Button = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default AddCustomerModal;\r\n","import React, { useContext } from 'react';\r\nimport { ModalProvider } from 'styled-react-modal';\r\nimport styled from 'styled-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { AppContext } from '../context/AppContext';\r\nimport List from './List';\r\nimport AddCustomerModal from './AddCustomerModal';\r\n\r\nconst WholePage = () => {\r\n  const { isEdit, setIsEdit, setIsModalOpen, customerList } = useContext(\r\n    AppContext\r\n  );\r\n\r\n  return (\r\n    <ModalProvider>\r\n      <LogoN\r\n        height='45px'\r\n        width='45px'\r\n        display='flex'\r\n        justifyContent='center'\r\n        alignItems='center'\r\n        onClick={() => window.location.reload()}\r\n      >\r\n        N\r\n      </LogoN>\r\n      <GradientH height='50px' />\r\n      <SandHeader />\r\n      <Content>\r\n        <Box marginLeft='15px' display='flex'>\r\n          <Button\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            marginRight='10px'\r\n          >\r\n            Start\r\n          </Button>\r\n          <Button\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            marginRight='10px'\r\n            onClick={() => setIsEdit(!isEdit)}\r\n          >\r\n            {isEdit ? 'Save' : 'Edit'}\r\n          </Button>\r\n          {isEdit && (\r\n            <Button\r\n              width='150px'\r\n              display='flex'\r\n              justifyContent='center'\r\n              alignItems='center'\r\n              onClick={() => setIsModalOpen(true)}\r\n            >\r\n              Opprett ny kunde\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        <Box marginTop='30px' display='flex'>\r\n          <TableTitle\r\n            width='10vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Date\r\n          </TableTitle>\r\n          <TableTitle\r\n            paddingX='15px'\r\n            width='30vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='space-between'\r\n            alignItems='center'\r\n          >\r\n            <Box> Type something 1</Box>\r\n            <BoxHover>\r\n              <i className='fas fa-sort' />\r\n            </BoxHover>\r\n          </TableTitle>\r\n\r\n          <TableTitle\r\n            width='5vw'\r\n            height='50px'\r\n            display='flex'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            Delete\r\n          </TableTitle>\r\n        </Box>\r\n\r\n        {customerList.map(d => (\r\n          <List key={d.id} id={d.id} date={d.date} name={d.name} />\r\n        ))}\r\n      </Content>\r\n      <GradientV />\r\n      <AddCustomerModal />\r\n      <SandFooter />\r\n    </ModalProvider>\r\n  );\r\n};\r\n\r\nconst LogoN = styled(Box)`\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.nordBlue};\r\n  font-size: ${props => props.theme.fontSize[2]};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst GradientH = styled(Box)`\r\n  height: 45px;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background-image: linear-gradient(-90deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst GradientV = styled.div`\r\n  height: 100%;\r\n  width: 45px;\r\n  top: 0;\r\n  left: 0;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: linear-gradient(-45deg, #a1c4e2 5%, #6892c1 100%);\r\n`;\r\n\r\nconst SandHeader = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 60px;\r\n  top: 45px;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst SandFooter = styled.div`\r\n  width: calc(100% - 45px);\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 45px;\r\n  position: fixed;\r\n  z-index: -1;\r\n  background: ${props => props.theme.colors.sandBG};\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  top: 160px;\r\n  left: 120px;\r\n  width: calc(100% - 200px);\r\n  height: calc(100% - 320px);\r\n`;\r\n\r\nconst Button = styled(Box)`\r\n  height: 40px;\r\n  width: 87px;\r\n  border-radius: 6px;\r\n  color: ${props => props.theme.colors.white};\r\n  background: ${props => props.theme.colors.graBlue1};\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TableTitle = styled(Box)`\r\n  background: ${props => props.theme.colors.tableHead};\r\n  color: ${props => props.theme.colors.fontGray};\r\n  border: 1px solid ${props => props.theme.colors.tabledorder};\r\n`;\r\n\r\nconst BoxHover = styled(Box)`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default WholePage;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\nimport WholePage from './components/WholePage';\nimport AppContextProvider from './context/AppContext';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppContextProvider>\n        <WholePage />\n      </AppContextProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}